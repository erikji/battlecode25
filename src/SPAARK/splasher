		loc = G.me.translate(0, 0);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[12] += G.paintPerChips() * 100;
							attackScores[11] += G.paintPerChips() * 100;
							attackScores[9] += G.paintPerChips() * 100;
							attackScores[10] += G.paintPerChips() * 100;
							attackScores[5] += G.paintPerChips() * 100;
							attackScores[2] += G.paintPerChips() * 100;
							attackScores[7] += G.paintPerChips() * 100;
							attackScores[4] += G.paintPerChips() * 100;
							attackScores[8] += G.paintPerChips() * 100;
							attackScores[3] += G.paintPerChips() * 100;
							attackScores[6] += G.paintPerChips() * 100;
							attackScores[1] += G.paintPerChips() * 100;
							attackScores[0] += G.paintPerChips() * 100;
						} else {
							attackScores[12] += 100;
							attackScores[11] += 100;
							attackScores[9] += 100;
							attackScores[10] += 100;
							attackScores[5] += 100;
							attackScores[2] += 100;
							attackScores[7] += 100;
							attackScores[4] += 100;
							attackScores[8] += 100;
							attackScores[3] += 100;
							attackScores[6] += 100;
							attackScores[1] += 100;
							attackScores[0] += 100;
						}
					} else {
						attackScores[12] += 25;
						attackScores[11] += 25;
						attackScores[9] += 25;
						attackScores[10] += 25;
						attackScores[5] += 25;
						attackScores[2] += 25;
						attackScores[7] += 25;
						attackScores[4] += 25;
						attackScores[8] += 25;
						attackScores[3] += 25;
						attackScores[6] += 25;
						attackScores[1] += 25;
						attackScores[0] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[5] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[5] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[5] += 50;
					attackScores[2] += 50;
					attackScores[7] += 50;
					attackScores[4] += 50;
					attackScores[8] += 50;
					attackScores[3] += 50;
					attackScores[6] += 50;
					attackScores[1] += 50;
					attackScores[0] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[5] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[5] += 50;
					}
				}
			}
		}
		loc = G.me.translate(-1, 0);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[4] += G.paintPerChips() * 100;
							attackScores[16] += G.paintPerChips() * 100;
							attackScores[25] += G.paintPerChips() * 100;
							attackScores[15] += G.paintPerChips() * 100;
							attackScores[13] += G.paintPerChips() * 100;
							attackScores[5] += G.paintPerChips() * 100;
							attackScores[2] += G.paintPerChips() * 100;
							attackScores[0] += G.paintPerChips() * 100;
							attackScores[3] += G.paintPerChips() * 100;
							attackScores[6] += G.paintPerChips() * 100;
							attackScores[14] += G.paintPerChips() * 100;
							attackScores[9] += G.paintPerChips() * 100;
							attackScores[1] += G.paintPerChips() * 100;
						} else {
							attackScores[4] += 100;
							attackScores[16] += 100;
							attackScores[25] += 100;
							attackScores[15] += 100;
							attackScores[13] += 100;
							attackScores[5] += 100;
							attackScores[2] += 100;
							attackScores[0] += 100;
							attackScores[3] += 100;
							attackScores[6] += 100;
							attackScores[14] += 100;
							attackScores[9] += 100;
							attackScores[1] += 100;
						}
					} else {
						attackScores[4] += 25;
						attackScores[16] += 25;
						attackScores[25] += 25;
						attackScores[15] += 25;
						attackScores[13] += 25;
						attackScores[5] += 25;
						attackScores[2] += 25;
						attackScores[0] += 25;
						attackScores[3] += 25;
						attackScores[6] += 25;
						attackScores[14] += 25;
						attackScores[9] += 25;
						attackScores[1] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[13] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[13] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[13] += 50;
					attackScores[5] += 50;
					attackScores[2] += 50;
					attackScores[0] += 50;
					attackScores[3] += 50;
					attackScores[6] += 50;
					attackScores[14] += 50;
					attackScores[9] += 50;
					attackScores[1] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[13] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[13] += 50;
					}
				}
			}
		}
		loc = G.me.translate(0, -1);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[19] += G.paintPerChips() * 100;
							attackScores[3] += G.paintPerChips() * 100;
							attackScores[13] += G.paintPerChips() * 100;
							attackScores[26] += G.paintPerChips() * 100;
							attackScores[15] += G.paintPerChips() * 100;
							attackScores[10] += G.paintPerChips() * 100;
							attackScores[17] += G.paintPerChips() * 100;
							attackScores[7] += G.paintPerChips() * 100;
							attackScores[4] += G.paintPerChips() * 100;
							attackScores[0] += G.paintPerChips() * 100;
							attackScores[1] += G.paintPerChips() * 100;
							attackScores[5] += G.paintPerChips() * 100;
							attackScores[2] += G.paintPerChips() * 100;
						} else {
							attackScores[19] += 100;
							attackScores[3] += 100;
							attackScores[13] += 100;
							attackScores[26] += 100;
							attackScores[15] += 100;
							attackScores[10] += 100;
							attackScores[17] += 100;
							attackScores[7] += 100;
							attackScores[4] += 100;
							attackScores[0] += 100;
							attackScores[1] += 100;
							attackScores[5] += 100;
							attackScores[2] += 100;
						}
					} else {
						attackScores[19] += 25;
						attackScores[3] += 25;
						attackScores[13] += 25;
						attackScores[26] += 25;
						attackScores[15] += 25;
						attackScores[10] += 25;
						attackScores[17] += 25;
						attackScores[7] += 25;
						attackScores[4] += 25;
						attackScores[0] += 25;
						attackScores[1] += 25;
						attackScores[5] += 25;
						attackScores[2] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[15] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[15] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[15] += 50;
					attackScores[10] += 50;
					attackScores[17] += 50;
					attackScores[7] += 50;
					attackScores[4] += 50;
					attackScores[0] += 50;
					attackScores[1] += 50;
					attackScores[5] += 50;
					attackScores[2] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[15] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[15] += 50;
					}
				}
			}
		}
		loc = G.me.translate(0, 1);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[20] += G.paintPerChips() * 100;
							attackScores[27] += G.paintPerChips() * 100;
							attackScores[14] += G.paintPerChips() * 100;
							attackScores[2] += G.paintPerChips() * 100;
							attackScores[1] += G.paintPerChips() * 100;
							attackScores[0] += G.paintPerChips() * 100;
							attackScores[4] += G.paintPerChips() * 100;
							attackScores[8] += G.paintPerChips() * 100;
							attackScores[18] += G.paintPerChips() * 100;
							attackScores[11] += G.paintPerChips() * 100;
							attackScores[16] += G.paintPerChips() * 100;
							attackScores[6] += G.paintPerChips() * 100;
							attackScores[3] += G.paintPerChips() * 100;
						} else {
							attackScores[20] += 100;
							attackScores[27] += 100;
							attackScores[14] += 100;
							attackScores[2] += 100;
							attackScores[1] += 100;
							attackScores[0] += 100;
							attackScores[4] += 100;
							attackScores[8] += 100;
							attackScores[18] += 100;
							attackScores[11] += 100;
							attackScores[16] += 100;
							attackScores[6] += 100;
							attackScores[3] += 100;
						}
					} else {
						attackScores[20] += 25;
						attackScores[27] += 25;
						attackScores[14] += 25;
						attackScores[2] += 25;
						attackScores[1] += 25;
						attackScores[0] += 25;
						attackScores[4] += 25;
						attackScores[8] += 25;
						attackScores[18] += 25;
						attackScores[11] += 25;
						attackScores[16] += 25;
						attackScores[6] += 25;
						attackScores[3] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[1] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[1] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[1] += 50;
					attackScores[0] += 50;
					attackScores[4] += 50;
					attackScores[8] += 50;
					attackScores[18] += 50;
					attackScores[11] += 50;
					attackScores[16] += 50;
					attackScores[6] += 50;
					attackScores[3] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[1] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[1] += 50;
					}
				}
			}
		}
		loc = G.me.translate(1, 0);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[28] += G.paintPerChips() * 100;
							attackScores[18] += G.paintPerChips() * 100;
							attackScores[1] += G.paintPerChips() * 100;
							attackScores[17] += G.paintPerChips() * 100;
							attackScores[2] += G.paintPerChips() * 100;
							attackScores[7] += G.paintPerChips() * 100;
							attackScores[19] += G.paintPerChips() * 100;
							attackScores[12] += G.paintPerChips() * 100;
							attackScores[20] += G.paintPerChips() * 100;
							attackScores[8] += G.paintPerChips() * 100;
							attackScores[3] += G.paintPerChips() * 100;
							attackScores[0] += G.paintPerChips() * 100;
							attackScores[4] += G.paintPerChips() * 100;
						} else {
							attackScores[28] += 100;
							attackScores[18] += 100;
							attackScores[1] += 100;
							attackScores[17] += 100;
							attackScores[2] += 100;
							attackScores[7] += 100;
							attackScores[19] += 100;
							attackScores[12] += 100;
							attackScores[20] += 100;
							attackScores[8] += 100;
							attackScores[3] += 100;
							attackScores[0] += 100;
							attackScores[4] += 100;
						}
					} else {
						attackScores[28] += 25;
						attackScores[18] += 25;
						attackScores[1] += 25;
						attackScores[17] += 25;
						attackScores[2] += 25;
						attackScores[7] += 25;
						attackScores[19] += 25;
						attackScores[12] += 25;
						attackScores[20] += 25;
						attackScores[8] += 25;
						attackScores[3] += 25;
						attackScores[0] += 25;
						attackScores[4] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[2] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[2] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[2] += 50;
					attackScores[7] += 50;
					attackScores[19] += 50;
					attackScores[12] += 50;
					attackScores[20] += 50;
					attackScores[8] += 50;
					attackScores[3] += 50;
					attackScores[0] += 50;
					attackScores[4] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[2] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[2] += 50;
					}
				}
			}
		}
		loc = G.me.translate(-1, -1);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[7] += G.paintPerChips() * 100;
							attackScores[6] += G.paintPerChips() * 100;
							attackScores[29] += G.paintPerChips() * 100;
							attackScores[31] += G.paintPerChips() * 100;
							attackScores[21] += G.paintPerChips() * 100;
							attackScores[15] += G.paintPerChips() * 100;
							attackScores[10] += G.paintPerChips() * 100;
							attackScores[2] += G.paintPerChips() * 100;
							attackScores[0] += G.paintPerChips() * 100;
							attackScores[1] += G.paintPerChips() * 100;
							attackScores[9] += G.paintPerChips() * 100;
							attackScores[13] += G.paintPerChips() * 100;
							attackScores[5] += G.paintPerChips() * 100;
						} else {
							attackScores[7] += 100;
							attackScores[6] += 100;
							attackScores[29] += 100;
							attackScores[31] += 100;
							attackScores[21] += 100;
							attackScores[15] += 100;
							attackScores[10] += 100;
							attackScores[2] += 100;
							attackScores[0] += 100;
							attackScores[1] += 100;
							attackScores[9] += 100;
							attackScores[13] += 100;
							attackScores[5] += 100;
						}
					} else {
						attackScores[7] += 25;
						attackScores[6] += 25;
						attackScores[29] += 25;
						attackScores[31] += 25;
						attackScores[21] += 25;
						attackScores[15] += 25;
						attackScores[10] += 25;
						attackScores[2] += 25;
						attackScores[0] += 25;
						attackScores[1] += 25;
						attackScores[9] += 25;
						attackScores[13] += 25;
						attackScores[5] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[21] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[21] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[21] += 50;
					attackScores[15] += 50;
					attackScores[10] += 50;
					attackScores[2] += 50;
					attackScores[0] += 50;
					attackScores[1] += 50;
					attackScores[9] += 50;
					attackScores[13] += 50;
					attackScores[5] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[21] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[21] += 50;
					}
				}
			}
		}
		loc = G.me.translate(-1, 1);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[8] += G.paintPerChips() * 100;
							attackScores[32] += G.paintPerChips() * 100;
							attackScores[30] += G.paintPerChips() * 100;
							attackScores[5] += G.paintPerChips() * 100;
							attackScores[9] += G.paintPerChips() * 100;
							attackScores[1] += G.paintPerChips() * 100;
							attackScores[0] += G.paintPerChips() * 100;
							attackScores[3] += G.paintPerChips() * 100;
							attackScores[11] += G.paintPerChips() * 100;
							attackScores[16] += G.paintPerChips() * 100;
							attackScores[22] += G.paintPerChips() * 100;
							attackScores[14] += G.paintPerChips() * 100;
							attackScores[6] += G.paintPerChips() * 100;
						} else {
							attackScores[8] += 100;
							attackScores[32] += 100;
							attackScores[30] += 100;
							attackScores[5] += 100;
							attackScores[9] += 100;
							attackScores[1] += 100;
							attackScores[0] += 100;
							attackScores[3] += 100;
							attackScores[11] += 100;
							attackScores[16] += 100;
							attackScores[22] += 100;
							attackScores[14] += 100;
							attackScores[6] += 100;
						}
					} else {
						attackScores[8] += 25;
						attackScores[32] += 25;
						attackScores[30] += 25;
						attackScores[5] += 25;
						attackScores[9] += 25;
						attackScores[1] += 25;
						attackScores[0] += 25;
						attackScores[3] += 25;
						attackScores[11] += 25;
						attackScores[16] += 25;
						attackScores[22] += 25;
						attackScores[14] += 25;
						attackScores[6] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[9] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[9] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[9] += 50;
					attackScores[1] += 50;
					attackScores[0] += 50;
					attackScores[3] += 50;
					attackScores[11] += 50;
					attackScores[16] += 50;
					attackScores[22] += 50;
					attackScores[14] += 50;
					attackScores[6] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[9] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[9] += 50;
					}
				}
			}
		}
		loc = G.me.translate(1, -1);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[35] += G.paintPerChips() * 100;
							attackScores[8] += G.paintPerChips() * 100;
							attackScores[5] += G.paintPerChips() * 100;
							attackScores[33] += G.paintPerChips() * 100;
							attackScores[10] += G.paintPerChips() * 100;
							attackScores[17] += G.paintPerChips() * 100;
							attackScores[23] += G.paintPerChips() * 100;
							attackScores[19] += G.paintPerChips() * 100;
							attackScores[12] += G.paintPerChips() * 100;
							attackScores[4] += G.paintPerChips() * 100;
							attackScores[0] += G.paintPerChips() * 100;
							attackScores[2] += G.paintPerChips() * 100;
							attackScores[7] += G.paintPerChips() * 100;
						} else {
							attackScores[35] += 100;
							attackScores[8] += 100;
							attackScores[5] += 100;
							attackScores[33] += 100;
							attackScores[10] += 100;
							attackScores[17] += 100;
							attackScores[23] += 100;
							attackScores[19] += 100;
							attackScores[12] += 100;
							attackScores[4] += 100;
							attackScores[0] += 100;
							attackScores[2] += 100;
							attackScores[7] += 100;
						}
					} else {
						attackScores[35] += 25;
						attackScores[8] += 25;
						attackScores[5] += 25;
						attackScores[33] += 25;
						attackScores[10] += 25;
						attackScores[17] += 25;
						attackScores[23] += 25;
						attackScores[19] += 25;
						attackScores[12] += 25;
						attackScores[4] += 25;
						attackScores[0] += 25;
						attackScores[2] += 25;
						attackScores[7] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[10] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[10] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[10] += 50;
					attackScores[17] += 50;
					attackScores[23] += 50;
					attackScores[19] += 50;
					attackScores[12] += 50;
					attackScores[4] += 50;
					attackScores[0] += 50;
					attackScores[2] += 50;
					attackScores[7] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[10] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[10] += 50;
					}
				}
			}
		}
		loc = G.me.translate(1, 1);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[36] += G.paintPerChips() * 100;
							attackScores[34] += G.paintPerChips() * 100;
							attackScores[6] += G.paintPerChips() * 100;
							attackScores[7] += G.paintPerChips() * 100;
							attackScores[0] += G.paintPerChips() * 100;
							attackScores[4] += G.paintPerChips() * 100;
							attackScores[12] += G.paintPerChips() * 100;
							attackScores[20] += G.paintPerChips() * 100;
							attackScores[24] += G.paintPerChips() * 100;
							attackScores[18] += G.paintPerChips() * 100;
							attackScores[11] += G.paintPerChips() * 100;
							attackScores[3] += G.paintPerChips() * 100;
							attackScores[8] += G.paintPerChips() * 100;
						} else {
							attackScores[36] += 100;
							attackScores[34] += 100;
							attackScores[6] += 100;
							attackScores[7] += 100;
							attackScores[0] += 100;
							attackScores[4] += 100;
							attackScores[12] += 100;
							attackScores[20] += 100;
							attackScores[24] += 100;
							attackScores[18] += 100;
							attackScores[11] += 100;
							attackScores[3] += 100;
							attackScores[8] += 100;
						}
					} else {
						attackScores[36] += 25;
						attackScores[34] += 25;
						attackScores[6] += 25;
						attackScores[7] += 25;
						attackScores[0] += 25;
						attackScores[4] += 25;
						attackScores[12] += 25;
						attackScores[20] += 25;
						attackScores[24] += 25;
						attackScores[18] += 25;
						attackScores[11] += 25;
						attackScores[3] += 25;
						attackScores[8] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[0] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[0] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[0] += 50;
					attackScores[4] += 50;
					attackScores[12] += 50;
					attackScores[20] += 50;
					attackScores[24] += 50;
					attackScores[18] += 50;
					attackScores[11] += 50;
					attackScores[3] += 50;
					attackScores[8] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[0] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[0] += 50;
					}
				}
			}
		}
		loc = G.me.translate(-2, 0);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[0] += G.paintPerChips() * 100;
							attackScores[22] += G.paintPerChips() * 100;
							attackScores[21] += G.paintPerChips() * 100;
							attackScores[29] += G.paintPerChips() * 100;
							attackScores[13] += G.paintPerChips() * 100;
							attackScores[5] += G.paintPerChips() * 100;
							attackScores[1] += G.paintPerChips() * 100;
							attackScores[6] += G.paintPerChips() * 100;
							attackScores[14] += G.paintPerChips() * 100;
							attackScores[30] += G.paintPerChips() * 100;
							attackScores[25] += G.paintPerChips() * 100;
							attackScores[9] += G.paintPerChips() * 100;
						} else {
							attackScores[0] += 100;
							attackScores[22] += 100;
							attackScores[21] += 100;
							attackScores[29] += 100;
							attackScores[13] += 100;
							attackScores[5] += 100;
							attackScores[1] += 100;
							attackScores[6] += 100;
							attackScores[14] += 100;
							attackScores[30] += 100;
							attackScores[25] += 100;
							attackScores[9] += 100;
						}
					} else {
						attackScores[0] += 25;
						attackScores[22] += 25;
						attackScores[21] += 25;
						attackScores[29] += 25;
						attackScores[13] += 25;
						attackScores[5] += 25;
						attackScores[1] += 25;
						attackScores[6] += 25;
						attackScores[14] += 25;
						attackScores[30] += 25;
						attackScores[25] += 25;
						attackScores[9] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[29] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[29] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[29] += 50;
					attackScores[13] += 50;
					attackScores[5] += 50;
					attackScores[1] += 50;
					attackScores[6] += 50;
					attackScores[14] += 50;
					attackScores[30] += 50;
					attackScores[25] += 50;
					attackScores[9] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[29] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[29] += 50;
					}
				}
			}
		}
		loc = G.me.translate(0, -2);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[23] += G.paintPerChips() * 100;
							attackScores[0] += G.paintPerChips() * 100;
							attackScores[21] += G.paintPerChips() * 100;
							attackScores[31] += G.paintPerChips() * 100;
							attackScores[26] += G.paintPerChips() * 100;
							attackScores[33] += G.paintPerChips() * 100;
							attackScores[17] += G.paintPerChips() * 100;
							attackScores[7] += G.paintPerChips() * 100;
							attackScores[2] += G.paintPerChips() * 100;
							attackScores[5] += G.paintPerChips() * 100;
							attackScores[15] += G.paintPerChips() * 100;
							attackScores[10] += G.paintPerChips() * 100;
						} else {
							attackScores[23] += 100;
							attackScores[0] += 100;
							attackScores[21] += 100;
							attackScores[31] += 100;
							attackScores[26] += 100;
							attackScores[33] += 100;
							attackScores[17] += 100;
							attackScores[7] += 100;
							attackScores[2] += 100;
							attackScores[5] += 100;
							attackScores[15] += 100;
							attackScores[10] += 100;
						}
					} else {
						attackScores[23] += 25;
						attackScores[0] += 25;
						attackScores[21] += 25;
						attackScores[31] += 25;
						attackScores[26] += 25;
						attackScores[33] += 25;
						attackScores[17] += 25;
						attackScores[7] += 25;
						attackScores[2] += 25;
						attackScores[5] += 25;
						attackScores[15] += 25;
						attackScores[10] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[31] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[31] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[31] += 50;
					attackScores[26] += 50;
					attackScores[33] += 50;
					attackScores[17] += 50;
					attackScores[7] += 50;
					attackScores[2] += 50;
					attackScores[5] += 50;
					attackScores[15] += 50;
					attackScores[10] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[31] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[31] += 50;
					}
				}
			}
		}
		loc = G.me.translate(0, 2);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[24] += G.paintPerChips() * 100;
							attackScores[22] += G.paintPerChips() * 100;
							attackScores[0] += G.paintPerChips() * 100;
							attackScores[6] += G.paintPerChips() * 100;
							attackScores[3] += G.paintPerChips() * 100;
							attackScores[8] += G.paintPerChips() * 100;
							attackScores[18] += G.paintPerChips() * 100;
							attackScores[34] += G.paintPerChips() * 100;
							attackScores[27] += G.paintPerChips() * 100;
							attackScores[32] += G.paintPerChips() * 100;
							attackScores[16] += G.paintPerChips() * 100;
							attackScores[11] += G.paintPerChips() * 100;
						} else {
							attackScores[24] += 100;
							attackScores[22] += 100;
							attackScores[0] += 100;
							attackScores[6] += 100;
							attackScores[3] += 100;
							attackScores[8] += 100;
							attackScores[18] += 100;
							attackScores[34] += 100;
							attackScores[27] += 100;
							attackScores[32] += 100;
							attackScores[16] += 100;
							attackScores[11] += 100;
						}
					} else {
						attackScores[24] += 25;
						attackScores[22] += 25;
						attackScores[0] += 25;
						attackScores[6] += 25;
						attackScores[3] += 25;
						attackScores[8] += 25;
						attackScores[18] += 25;
						attackScores[34] += 25;
						attackScores[27] += 25;
						attackScores[32] += 25;
						attackScores[16] += 25;
						attackScores[11] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[6] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[6] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[6] += 50;
					attackScores[3] += 50;
					attackScores[8] += 50;
					attackScores[18] += 50;
					attackScores[34] += 50;
					attackScores[27] += 50;
					attackScores[32] += 50;
					attackScores[16] += 50;
					attackScores[11] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[6] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[6] += 50;
					}
				}
			}
		}
		loc = G.me.translate(2, 0);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[24] += G.paintPerChips() * 100;
							attackScores[0] += G.paintPerChips() * 100;
							attackScores[23] += G.paintPerChips() * 100;
							attackScores[7] += G.paintPerChips() * 100;
							attackScores[19] += G.paintPerChips() * 100;
							attackScores[35] += G.paintPerChips() * 100;
							attackScores[28] += G.paintPerChips() * 100;
							attackScores[36] += G.paintPerChips() * 100;
							attackScores[20] += G.paintPerChips() * 100;
							attackScores[8] += G.paintPerChips() * 100;
							attackScores[4] += G.paintPerChips() * 100;
							attackScores[12] += G.paintPerChips() * 100;
						} else {
							attackScores[24] += 100;
							attackScores[0] += 100;
							attackScores[23] += 100;
							attackScores[7] += 100;
							attackScores[19] += 100;
							attackScores[35] += 100;
							attackScores[28] += 100;
							attackScores[36] += 100;
							attackScores[20] += 100;
							attackScores[8] += 100;
							attackScores[4] += 100;
							attackScores[12] += 100;
						}
					} else {
						attackScores[24] += 25;
						attackScores[0] += 25;
						attackScores[23] += 25;
						attackScores[7] += 25;
						attackScores[19] += 25;
						attackScores[35] += 25;
						attackScores[28] += 25;
						attackScores[36] += 25;
						attackScores[20] += 25;
						attackScores[8] += 25;
						attackScores[4] += 25;
						attackScores[12] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[7] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[7] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[7] += 50;
					attackScores[19] += 50;
					attackScores[35] += 50;
					attackScores[28] += 50;
					attackScores[36] += 50;
					attackScores[20] += 50;
					attackScores[8] += 50;
					attackScores[4] += 50;
					attackScores[12] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[7] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[7] += 50;
					}
				}
			}
		}
		loc = G.me.translate(-2, -1);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[2] += G.paintPerChips() * 100;
							attackScores[14] += G.paintPerChips() * 100;
							attackScores[21] += G.paintPerChips() * 100;
							attackScores[15] += G.paintPerChips() * 100;
							attackScores[5] += G.paintPerChips() * 100;
							attackScores[1] += G.paintPerChips() * 100;
							attackScores[9] += G.paintPerChips() * 100;
							attackScores[25] += G.paintPerChips() * 100;
							attackScores[29] += G.paintPerChips() * 100;
							attackScores[13] += G.paintPerChips() * 100;
						} else {
							attackScores[2] += 100;
							attackScores[14] += 100;
							attackScores[21] += 100;
							attackScores[15] += 100;
							attackScores[5] += 100;
							attackScores[1] += 100;
							attackScores[9] += 100;
							attackScores[25] += 100;
							attackScores[29] += 100;
							attackScores[13] += 100;
						}
					} else {
						attackScores[2] += 25;
						attackScores[14] += 25;
						attackScores[21] += 25;
						attackScores[15] += 25;
						attackScores[5] += 25;
						attackScores[1] += 25;
						attackScores[9] += 25;
						attackScores[25] += 25;
						attackScores[29] += 25;
						attackScores[13] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[21] += 50;
					attackScores[15] += 50;
					attackScores[5] += 50;
					attackScores[1] += 50;
					attackScores[9] += 50;
					attackScores[25] += 50;
					attackScores[29] += 50;
					attackScores[13] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(-2, 1);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[3] += G.paintPerChips() * 100;
							attackScores[13] += G.paintPerChips() * 100;
							attackScores[25] += G.paintPerChips() * 100;
							attackScores[9] += G.paintPerChips() * 100;
							attackScores[1] += G.paintPerChips() * 100;
							attackScores[6] += G.paintPerChips() * 100;
							attackScores[16] += G.paintPerChips() * 100;
							attackScores[22] += G.paintPerChips() * 100;
							attackScores[30] += G.paintPerChips() * 100;
							attackScores[14] += G.paintPerChips() * 100;
						} else {
							attackScores[3] += 100;
							attackScores[13] += 100;
							attackScores[25] += 100;
							attackScores[9] += 100;
							attackScores[1] += 100;
							attackScores[6] += 100;
							attackScores[16] += 100;
							attackScores[22] += 100;
							attackScores[30] += 100;
							attackScores[14] += 100;
						}
					} else {
						attackScores[3] += 25;
						attackScores[13] += 25;
						attackScores[25] += 25;
						attackScores[9] += 25;
						attackScores[1] += 25;
						attackScores[6] += 25;
						attackScores[16] += 25;
						attackScores[22] += 25;
						attackScores[30] += 25;
						attackScores[14] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[25] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[25] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[25] += 50;
					attackScores[9] += 50;
					attackScores[1] += 50;
					attackScores[6] += 50;
					attackScores[16] += 50;
					attackScores[22] += 50;
					attackScores[30] += 50;
					attackScores[14] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[25] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[25] += 50;
					}
				}
			}
		}
		loc = G.me.translate(-1, -2);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[17] += G.paintPerChips() * 100;
							attackScores[1] += G.paintPerChips() * 100;
							attackScores[31] += G.paintPerChips() * 100;
							attackScores[26] += G.paintPerChips() * 100;
							attackScores[10] += G.paintPerChips() * 100;
							attackScores[2] += G.paintPerChips() * 100;
							attackScores[5] += G.paintPerChips() * 100;
							attackScores[13] += G.paintPerChips() * 100;
							attackScores[21] += G.paintPerChips() * 100;
							attackScores[15] += G.paintPerChips() * 100;
						} else {
							attackScores[17] += 100;
							attackScores[1] += 100;
							attackScores[31] += 100;
							attackScores[26] += 100;
							attackScores[10] += 100;
							attackScores[2] += 100;
							attackScores[5] += 100;
							attackScores[13] += 100;
							attackScores[21] += 100;
							attackScores[15] += 100;
						}
					} else {
						attackScores[17] += 25;
						attackScores[1] += 25;
						attackScores[31] += 25;
						attackScores[26] += 25;
						attackScores[10] += 25;
						attackScores[2] += 25;
						attackScores[5] += 25;
						attackScores[13] += 25;
						attackScores[21] += 25;
						attackScores[15] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[31] += 50;
					attackScores[26] += 50;
					attackScores[10] += 50;
					attackScores[2] += 50;
					attackScores[5] += 50;
					attackScores[13] += 50;
					attackScores[21] += 50;
					attackScores[15] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(-1, 2);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[18] += G.paintPerChips() * 100;
							attackScores[1] += G.paintPerChips() * 100;
							attackScores[14] += G.paintPerChips() * 100;
							attackScores[6] += G.paintPerChips() * 100;
							attackScores[3] += G.paintPerChips() * 100;
							attackScores[11] += G.paintPerChips() * 100;
							attackScores[27] += G.paintPerChips() * 100;
							attackScores[32] += G.paintPerChips() * 100;
							attackScores[22] += G.paintPerChips() * 100;
							attackScores[16] += G.paintPerChips() * 100;
						} else {
							attackScores[18] += 100;
							attackScores[1] += 100;
							attackScores[14] += 100;
							attackScores[6] += 100;
							attackScores[3] += 100;
							attackScores[11] += 100;
							attackScores[27] += 100;
							attackScores[32] += 100;
							attackScores[22] += 100;
							attackScores[16] += 100;
						}
					} else {
						attackScores[18] += 25;
						attackScores[1] += 25;
						attackScores[14] += 25;
						attackScores[6] += 25;
						attackScores[3] += 25;
						attackScores[11] += 25;
						attackScores[27] += 25;
						attackScores[32] += 25;
						attackScores[22] += 25;
						attackScores[16] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[14] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[14] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[14] += 50;
					attackScores[6] += 50;
					attackScores[3] += 50;
					attackScores[11] += 50;
					attackScores[27] += 50;
					attackScores[32] += 50;
					attackScores[22] += 50;
					attackScores[16] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[14] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[14] += 50;
					}
				}
			}
		}
		loc = G.me.translate(1, -2);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[4] += G.paintPerChips() * 100;
							attackScores[15] += G.paintPerChips() * 100;
							attackScores[26] += G.paintPerChips() * 100;
							attackScores[33] += G.paintPerChips() * 100;
							attackScores[23] += G.paintPerChips() * 100;
							attackScores[19] += G.paintPerChips() * 100;
							attackScores[7] += G.paintPerChips() * 100;
							attackScores[2] += G.paintPerChips() * 100;
							attackScores[10] += G.paintPerChips() * 100;
							attackScores[17] += G.paintPerChips() * 100;
						} else {
							attackScores[4] += 100;
							attackScores[15] += 100;
							attackScores[26] += 100;
							attackScores[33] += 100;
							attackScores[23] += 100;
							attackScores[19] += 100;
							attackScores[7] += 100;
							attackScores[2] += 100;
							attackScores[10] += 100;
							attackScores[17] += 100;
						}
					} else {
						attackScores[4] += 25;
						attackScores[15] += 25;
						attackScores[26] += 25;
						attackScores[33] += 25;
						attackScores[23] += 25;
						attackScores[19] += 25;
						attackScores[7] += 25;
						attackScores[2] += 25;
						attackScores[10] += 25;
						attackScores[17] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[26] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[26] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[26] += 50;
					attackScores[33] += 50;
					attackScores[23] += 50;
					attackScores[19] += 50;
					attackScores[7] += 50;
					attackScores[2] += 50;
					attackScores[10] += 50;
					attackScores[17] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[26] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[26] += 50;
					}
				}
			}
		}
		loc = G.me.translate(1, 2);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[16] += G.paintPerChips() * 100;
							attackScores[4] += G.paintPerChips() * 100;
							attackScores[3] += G.paintPerChips() * 100;
							attackScores[8] += G.paintPerChips() * 100;
							attackScores[20] += G.paintPerChips() * 100;
							attackScores[24] += G.paintPerChips() * 100;
							attackScores[34] += G.paintPerChips() * 100;
							attackScores[27] += G.paintPerChips() * 100;
							attackScores[11] += G.paintPerChips() * 100;
							attackScores[18] += G.paintPerChips() * 100;
						} else {
							attackScores[16] += 100;
							attackScores[4] += 100;
							attackScores[3] += 100;
							attackScores[8] += 100;
							attackScores[20] += 100;
							attackScores[24] += 100;
							attackScores[34] += 100;
							attackScores[27] += 100;
							attackScores[11] += 100;
							attackScores[18] += 100;
						}
					} else {
						attackScores[16] += 25;
						attackScores[4] += 25;
						attackScores[3] += 25;
						attackScores[8] += 25;
						attackScores[20] += 25;
						attackScores[24] += 25;
						attackScores[34] += 25;
						attackScores[27] += 25;
						attackScores[11] += 25;
						attackScores[18] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[3] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[3] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[3] += 50;
					attackScores[8] += 50;
					attackScores[20] += 50;
					attackScores[24] += 50;
					attackScores[34] += 50;
					attackScores[27] += 50;
					attackScores[11] += 50;
					attackScores[18] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[3] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[3] += 50;
					}
				}
			}
		}
		loc = G.me.translate(2, -1);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[20] += G.paintPerChips() * 100;
							attackScores[2] += G.paintPerChips() * 100;
							attackScores[17] += G.paintPerChips() * 100;
							attackScores[23] += G.paintPerChips() * 100;
							attackScores[35] += G.paintPerChips() * 100;
							attackScores[28] += G.paintPerChips() * 100;
							attackScores[12] += G.paintPerChips() * 100;
							attackScores[4] += G.paintPerChips() * 100;
							attackScores[7] += G.paintPerChips() * 100;
							attackScores[19] += G.paintPerChips() * 100;
						} else {
							attackScores[20] += 100;
							attackScores[2] += 100;
							attackScores[17] += 100;
							attackScores[23] += 100;
							attackScores[35] += 100;
							attackScores[28] += 100;
							attackScores[12] += 100;
							attackScores[4] += 100;
							attackScores[7] += 100;
							attackScores[19] += 100;
						}
					} else {
						attackScores[20] += 25;
						attackScores[2] += 25;
						attackScores[17] += 25;
						attackScores[23] += 25;
						attackScores[35] += 25;
						attackScores[28] += 25;
						attackScores[12] += 25;
						attackScores[4] += 25;
						attackScores[7] += 25;
						attackScores[19] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[17] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[17] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[17] += 50;
					attackScores[23] += 50;
					attackScores[35] += 50;
					attackScores[28] += 50;
					attackScores[12] += 50;
					attackScores[4] += 50;
					attackScores[7] += 50;
					attackScores[19] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[17] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[17] += 50;
					}
				}
			}
		}
		loc = G.me.translate(2, 1);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[3] += G.paintPerChips() * 100;
							attackScores[19] += G.paintPerChips() * 100;
							attackScores[4] += G.paintPerChips() * 100;
							attackScores[12] += G.paintPerChips() * 100;
							attackScores[28] += G.paintPerChips() * 100;
							attackScores[36] += G.paintPerChips() * 100;
							attackScores[24] += G.paintPerChips() * 100;
							attackScores[18] += G.paintPerChips() * 100;
							attackScores[8] += G.paintPerChips() * 100;
							attackScores[20] += G.paintPerChips() * 100;
						} else {
							attackScores[3] += 100;
							attackScores[19] += 100;
							attackScores[4] += 100;
							attackScores[12] += 100;
							attackScores[28] += 100;
							attackScores[36] += 100;
							attackScores[24] += 100;
							attackScores[18] += 100;
							attackScores[8] += 100;
							attackScores[20] += 100;
						}
					} else {
						attackScores[3] += 25;
						attackScores[19] += 25;
						attackScores[4] += 25;
						attackScores[12] += 25;
						attackScores[28] += 25;
						attackScores[36] += 25;
						attackScores[24] += 25;
						attackScores[18] += 25;
						attackScores[8] += 25;
						attackScores[20] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[4] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[4] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[4] += 50;
					attackScores[12] += 50;
					attackScores[28] += 50;
					attackScores[36] += 50;
					attackScores[24] += 50;
					attackScores[18] += 50;
					attackScores[8] += 50;
					attackScores[20] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[4] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[4] += 50;
					}
				}
			}
		}
		loc = G.me.translate(-2, -2);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[10] += G.paintPerChips() * 100;
							attackScores[9] += G.paintPerChips() * 100;
							attackScores[31] += G.paintPerChips() * 100;
							attackScores[15] += G.paintPerChips() * 100;
							attackScores[5] += G.paintPerChips() * 100;
							attackScores[13] += G.paintPerChips() * 100;
							attackScores[29] += G.paintPerChips() * 100;
							attackScores[21] += G.paintPerChips() * 100;
						} else {
							attackScores[10] += 100;
							attackScores[9] += 100;
							attackScores[31] += 100;
							attackScores[15] += 100;
							attackScores[5] += 100;
							attackScores[13] += 100;
							attackScores[29] += 100;
							attackScores[21] += 100;
						}
					} else {
						attackScores[10] += 25;
						attackScores[9] += 25;
						attackScores[31] += 25;
						attackScores[15] += 25;
						attackScores[5] += 25;
						attackScores[13] += 25;
						attackScores[29] += 25;
						attackScores[21] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[31] += 50;
					attackScores[15] += 50;
					attackScores[5] += 50;
					attackScores[13] += 50;
					attackScores[29] += 50;
					attackScores[21] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(-2, 2);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[11] += G.paintPerChips() * 100;
							attackScores[9] += G.paintPerChips() * 100;
							attackScores[30] += G.paintPerChips() * 100;
							attackScores[14] += G.paintPerChips() * 100;
							attackScores[6] += G.paintPerChips() * 100;
							attackScores[16] += G.paintPerChips() * 100;
							attackScores[32] += G.paintPerChips() * 100;
							attackScores[22] += G.paintPerChips() * 100;
						} else {
							attackScores[11] += 100;
							attackScores[9] += 100;
							attackScores[30] += 100;
							attackScores[14] += 100;
							attackScores[6] += 100;
							attackScores[16] += 100;
							attackScores[32] += 100;
							attackScores[22] += 100;
						}
					} else {
						attackScores[11] += 25;
						attackScores[9] += 25;
						attackScores[30] += 25;
						attackScores[14] += 25;
						attackScores[6] += 25;
						attackScores[16] += 25;
						attackScores[32] += 25;
						attackScores[22] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[30] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[30] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[30] += 50;
					attackScores[14] += 50;
					attackScores[6] += 50;
					attackScores[16] += 50;
					attackScores[32] += 50;
					attackScores[22] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[30] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[30] += 50;
					}
				}
			}
		}
		loc = G.me.translate(2, -2);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[12] += G.paintPerChips() * 100;
							attackScores[10] += G.paintPerChips() * 100;
							attackScores[33] += G.paintPerChips() * 100;
							attackScores[35] += G.paintPerChips() * 100;
							attackScores[19] += G.paintPerChips() * 100;
							attackScores[7] += G.paintPerChips() * 100;
							attackScores[17] += G.paintPerChips() * 100;
							attackScores[23] += G.paintPerChips() * 100;
						} else {
							attackScores[12] += 100;
							attackScores[10] += 100;
							attackScores[33] += 100;
							attackScores[35] += 100;
							attackScores[19] += 100;
							attackScores[7] += 100;
							attackScores[17] += 100;
							attackScores[23] += 100;
						}
					} else {
						attackScores[12] += 25;
						attackScores[10] += 25;
						attackScores[33] += 25;
						attackScores[35] += 25;
						attackScores[19] += 25;
						attackScores[7] += 25;
						attackScores[17] += 25;
						attackScores[23] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[33] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[33] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[33] += 50;
					attackScores[35] += 50;
					attackScores[19] += 50;
					attackScores[7] += 50;
					attackScores[17] += 50;
					attackScores[23] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[33] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[33] += 50;
					}
				}
			}
		}
		loc = G.me.translate(2, 2);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[11] += G.paintPerChips() * 100;
							attackScores[12] += G.paintPerChips() * 100;
							attackScores[8] += G.paintPerChips() * 100;
							attackScores[20] += G.paintPerChips() * 100;
							attackScores[36] += G.paintPerChips() * 100;
							attackScores[34] += G.paintPerChips() * 100;
							attackScores[18] += G.paintPerChips() * 100;
							attackScores[24] += G.paintPerChips() * 100;
						} else {
							attackScores[11] += 100;
							attackScores[12] += 100;
							attackScores[8] += 100;
							attackScores[20] += 100;
							attackScores[36] += 100;
							attackScores[34] += 100;
							attackScores[18] += 100;
							attackScores[24] += 100;
						}
					} else {
						attackScores[11] += 25;
						attackScores[12] += 25;
						attackScores[8] += 25;
						attackScores[20] += 25;
						attackScores[36] += 25;
						attackScores[34] += 25;
						attackScores[18] += 25;
						attackScores[24] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[8] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[8] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[8] += 50;
					attackScores[20] += 50;
					attackScores[36] += 50;
					attackScores[34] += 50;
					attackScores[18] += 50;
					attackScores[24] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[8] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[8] += 50;
					}
				}
			}
		}
		loc = G.me.translate(-3, 0);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[1] += G.paintPerChips() * 100;
							attackScores[29] += G.paintPerChips() * 100;
							attackScores[13] += G.paintPerChips() * 100;
							attackScores[9] += G.paintPerChips() * 100;
							attackScores[14] += G.paintPerChips() * 100;
							attackScores[30] += G.paintPerChips() * 100;
							attackScores[25] += G.paintPerChips() * 100;
						} else {
							attackScores[1] += 100;
							attackScores[29] += 100;
							attackScores[13] += 100;
							attackScores[9] += 100;
							attackScores[14] += 100;
							attackScores[30] += 100;
							attackScores[25] += 100;
						}
					} else {
						attackScores[1] += 25;
						attackScores[29] += 25;
						attackScores[13] += 25;
						attackScores[9] += 25;
						attackScores[14] += 25;
						attackScores[30] += 25;
						attackScores[25] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[29] += 50;
					attackScores[13] += 50;
					attackScores[9] += 50;
					attackScores[14] += 50;
					attackScores[30] += 50;
					attackScores[25] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(0, -3);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[2] += G.paintPerChips() * 100;
							attackScores[33] += G.paintPerChips() * 100;
							attackScores[17] += G.paintPerChips() * 100;
							attackScores[10] += G.paintPerChips() * 100;
							attackScores[15] += G.paintPerChips() * 100;
							attackScores[31] += G.paintPerChips() * 100;
							attackScores[26] += G.paintPerChips() * 100;
						} else {
							attackScores[2] += 100;
							attackScores[33] += 100;
							attackScores[17] += 100;
							attackScores[10] += 100;
							attackScores[15] += 100;
							attackScores[31] += 100;
							attackScores[26] += 100;
						}
					} else {
						attackScores[2] += 25;
						attackScores[33] += 25;
						attackScores[17] += 25;
						attackScores[10] += 25;
						attackScores[15] += 25;
						attackScores[31] += 25;
						attackScores[26] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[33] += 50;
					attackScores[17] += 50;
					attackScores[10] += 50;
					attackScores[15] += 50;
					attackScores[31] += 50;
					attackScores[26] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(0, 3);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[3] += G.paintPerChips() * 100;
							attackScores[16] += G.paintPerChips() * 100;
							attackScores[11] += G.paintPerChips() * 100;
							attackScores[18] += G.paintPerChips() * 100;
							attackScores[34] += G.paintPerChips() * 100;
							attackScores[32] += G.paintPerChips() * 100;
							attackScores[27] += G.paintPerChips() * 100;
						} else {
							attackScores[3] += 100;
							attackScores[16] += 100;
							attackScores[11] += 100;
							attackScores[18] += 100;
							attackScores[34] += 100;
							attackScores[32] += 100;
							attackScores[27] += 100;
						}
					} else {
						attackScores[3] += 25;
						attackScores[16] += 25;
						attackScores[11] += 25;
						attackScores[18] += 25;
						attackScores[34] += 25;
						attackScores[32] += 25;
						attackScores[27] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[16] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[16] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[16] += 50;
					attackScores[11] += 50;
					attackScores[18] += 50;
					attackScores[34] += 50;
					attackScores[32] += 50;
					attackScores[27] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[16] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[16] += 50;
					}
				}
			}
		}
		loc = G.me.translate(3, 0);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[4] += G.paintPerChips() * 100;
							attackScores[19] += G.paintPerChips() * 100;
							attackScores[35] += G.paintPerChips() * 100;
							attackScores[36] += G.paintPerChips() * 100;
							attackScores[20] += G.paintPerChips() * 100;
							attackScores[12] += G.paintPerChips() * 100;
							attackScores[28] += G.paintPerChips() * 100;
						} else {
							attackScores[4] += 100;
							attackScores[19] += 100;
							attackScores[35] += 100;
							attackScores[36] += 100;
							attackScores[20] += 100;
							attackScores[12] += 100;
							attackScores[28] += 100;
						}
					} else {
						attackScores[4] += 25;
						attackScores[19] += 25;
						attackScores[35] += 25;
						attackScores[36] += 25;
						attackScores[20] += 25;
						attackScores[12] += 25;
						attackScores[28] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[19] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[19] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[19] += 50;
					attackScores[35] += 50;
					attackScores[36] += 50;
					attackScores[20] += 50;
					attackScores[12] += 50;
					attackScores[28] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[19] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[19] += 50;
					}
				}
			}
		}
		loc = G.me.translate(-3, -1);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[5] += G.paintPerChips() * 100;
							attackScores[30] += G.paintPerChips() * 100;
							attackScores[21] += G.paintPerChips() * 100;
							attackScores[13] += G.paintPerChips() * 100;
							attackScores[9] += G.paintPerChips() * 100;
							attackScores[25] += G.paintPerChips() * 100;
							attackScores[29] += G.paintPerChips() * 100;
						} else {
							attackScores[5] += 100;
							attackScores[30] += 100;
							attackScores[21] += 100;
							attackScores[13] += 100;
							attackScores[9] += 100;
							attackScores[25] += 100;
							attackScores[29] += 100;
						}
					} else {
						attackScores[5] += 25;
						attackScores[30] += 25;
						attackScores[21] += 25;
						attackScores[13] += 25;
						attackScores[9] += 25;
						attackScores[25] += 25;
						attackScores[29] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[21] += 50;
					attackScores[13] += 50;
					attackScores[9] += 50;
					attackScores[25] += 50;
					attackScores[29] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(-3, 1);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[6] += G.paintPerChips() * 100;
							attackScores[29] += G.paintPerChips() * 100;
							attackScores[25] += G.paintPerChips() * 100;
							attackScores[9] += G.paintPerChips() * 100;
							attackScores[14] += G.paintPerChips() * 100;
							attackScores[22] += G.paintPerChips() * 100;
							attackScores[30] += G.paintPerChips() * 100;
						} else {
							attackScores[6] += 100;
							attackScores[29] += 100;
							attackScores[25] += 100;
							attackScores[9] += 100;
							attackScores[14] += 100;
							attackScores[22] += 100;
							attackScores[30] += 100;
						}
					} else {
						attackScores[6] += 25;
						attackScores[29] += 25;
						attackScores[25] += 25;
						attackScores[9] += 25;
						attackScores[14] += 25;
						attackScores[22] += 25;
						attackScores[30] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[25] += 50;
					attackScores[9] += 50;
					attackScores[14] += 50;
					attackScores[22] += 50;
					attackScores[30] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(-1, -3);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[33] += G.paintPerChips() * 100;
							attackScores[5] += G.paintPerChips() * 100;
							attackScores[26] += G.paintPerChips() * 100;
							attackScores[10] += G.paintPerChips() * 100;
							attackScores[15] += G.paintPerChips() * 100;
							attackScores[21] += G.paintPerChips() * 100;
							attackScores[31] += G.paintPerChips() * 100;
						} else {
							attackScores[33] += 100;
							attackScores[5] += 100;
							attackScores[26] += 100;
							attackScores[10] += 100;
							attackScores[15] += 100;
							attackScores[21] += 100;
							attackScores[31] += 100;
						}
					} else {
						attackScores[33] += 25;
						attackScores[5] += 25;
						attackScores[26] += 25;
						attackScores[10] += 25;
						attackScores[15] += 25;
						attackScores[21] += 25;
						attackScores[31] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[26] += 50;
					attackScores[10] += 50;
					attackScores[15] += 50;
					attackScores[21] += 50;
					attackScores[31] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(-1, 3);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[34] += G.paintPerChips() * 100;
							attackScores[6] += G.paintPerChips() * 100;
							attackScores[22] += G.paintPerChips() * 100;
							attackScores[16] += G.paintPerChips() * 100;
							attackScores[11] += G.paintPerChips() * 100;
							attackScores[27] += G.paintPerChips() * 100;
							attackScores[32] += G.paintPerChips() * 100;
						} else {
							attackScores[34] += 100;
							attackScores[6] += 100;
							attackScores[22] += 100;
							attackScores[16] += 100;
							attackScores[11] += 100;
							attackScores[27] += 100;
							attackScores[32] += 100;
						}
					} else {
						attackScores[34] += 25;
						attackScores[6] += 25;
						attackScores[22] += 25;
						attackScores[16] += 25;
						attackScores[11] += 25;
						attackScores[27] += 25;
						attackScores[32] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[22] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[22] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[22] += 50;
					attackScores[16] += 50;
					attackScores[11] += 50;
					attackScores[27] += 50;
					attackScores[32] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[22] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[22] += 50;
					}
				}
			}
		}
		loc = G.me.translate(1, -3);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[7] += G.paintPerChips() * 100;
							attackScores[31] += G.paintPerChips() * 100;
							attackScores[23] += G.paintPerChips() * 100;
							attackScores[17] += G.paintPerChips() * 100;
							attackScores[10] += G.paintPerChips() * 100;
							attackScores[26] += G.paintPerChips() * 100;
							attackScores[33] += G.paintPerChips() * 100;
						} else {
							attackScores[7] += 100;
							attackScores[31] += 100;
							attackScores[23] += 100;
							attackScores[17] += 100;
							attackScores[10] += 100;
							attackScores[26] += 100;
							attackScores[33] += 100;
						}
					} else {
						attackScores[7] += 25;
						attackScores[31] += 25;
						attackScores[23] += 25;
						attackScores[17] += 25;
						attackScores[10] += 25;
						attackScores[26] += 25;
						attackScores[33] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[23] += 50;
					attackScores[17] += 50;
					attackScores[10] += 50;
					attackScores[26] += 50;
					attackScores[33] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(1, 3);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[32] += G.paintPerChips() * 100;
							attackScores[8] += G.paintPerChips() * 100;
							attackScores[11] += G.paintPerChips() * 100;
							attackScores[18] += G.paintPerChips() * 100;
							attackScores[24] += G.paintPerChips() * 100;
							attackScores[27] += G.paintPerChips() * 100;
							attackScores[34] += G.paintPerChips() * 100;
						} else {
							attackScores[32] += 100;
							attackScores[8] += 100;
							attackScores[11] += 100;
							attackScores[18] += 100;
							attackScores[24] += 100;
							attackScores[27] += 100;
							attackScores[34] += 100;
						}
					} else {
						attackScores[32] += 25;
						attackScores[8] += 25;
						attackScores[11] += 25;
						attackScores[18] += 25;
						attackScores[24] += 25;
						attackScores[27] += 25;
						attackScores[34] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[11] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[11] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[11] += 50;
					attackScores[18] += 50;
					attackScores[24] += 50;
					attackScores[27] += 50;
					attackScores[34] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[11] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[11] += 50;
					}
				}
			}
		}
		loc = G.me.translate(3, -1);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[36] += G.paintPerChips() * 100;
							attackScores[7] += G.paintPerChips() * 100;
							attackScores[23] += G.paintPerChips() * 100;
							attackScores[28] += G.paintPerChips() * 100;
							attackScores[12] += G.paintPerChips() * 100;
							attackScores[19] += G.paintPerChips() * 100;
							attackScores[35] += G.paintPerChips() * 100;
						} else {
							attackScores[36] += 100;
							attackScores[7] += 100;
							attackScores[23] += 100;
							attackScores[28] += 100;
							attackScores[12] += 100;
							attackScores[19] += 100;
							attackScores[35] += 100;
						}
					} else {
						attackScores[36] += 25;
						attackScores[7] += 25;
						attackScores[23] += 25;
						attackScores[28] += 25;
						attackScores[12] += 25;
						attackScores[19] += 25;
						attackScores[35] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[23] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[23] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[23] += 50;
					attackScores[28] += 50;
					attackScores[12] += 50;
					attackScores[19] += 50;
					attackScores[35] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[23] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[23] += 50;
					}
				}
			}
		}
		loc = G.me.translate(3, 1);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[8] += G.paintPerChips() * 100;
							attackScores[35] += G.paintPerChips() * 100;
							attackScores[12] += G.paintPerChips() * 100;
							attackScores[28] += G.paintPerChips() * 100;
							attackScores[24] += G.paintPerChips() * 100;
							attackScores[20] += G.paintPerChips() * 100;
							attackScores[36] += G.paintPerChips() * 100;
						} else {
							attackScores[8] += 100;
							attackScores[35] += 100;
							attackScores[12] += 100;
							attackScores[28] += 100;
							attackScores[24] += 100;
							attackScores[20] += 100;
							attackScores[36] += 100;
						}
					} else {
						attackScores[8] += 25;
						attackScores[35] += 25;
						attackScores[12] += 25;
						attackScores[28] += 25;
						attackScores[24] += 25;
						attackScores[20] += 25;
						attackScores[36] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[12] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[12] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[12] += 50;
					attackScores[28] += 50;
					attackScores[24] += 50;
					attackScores[20] += 50;
					attackScores[36] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[12] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[12] += 50;
					}
				}
			}
		}
		loc = G.me.translate(-3, -2);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[15] += G.paintPerChips() * 100;
							attackScores[25] += G.paintPerChips() * 100;
							attackScores[21] += G.paintPerChips() * 100;
							attackScores[13] += G.paintPerChips() * 100;
							attackScores[29] += G.paintPerChips() * 100;
						} else {
							attackScores[15] += 100;
							attackScores[25] += 100;
							attackScores[21] += 100;
							attackScores[13] += 100;
							attackScores[29] += 100;
						}
					} else {
						attackScores[15] += 25;
						attackScores[25] += 25;
						attackScores[21] += 25;
						attackScores[13] += 25;
						attackScores[29] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[21] += 50;
					attackScores[13] += 50;
					attackScores[29] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(-3, 2);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[16] += G.paintPerChips() * 100;
							attackScores[25] += G.paintPerChips() * 100;
							attackScores[30] += G.paintPerChips() * 100;
							attackScores[14] += G.paintPerChips() * 100;
							attackScores[22] += G.paintPerChips() * 100;
						} else {
							attackScores[16] += 100;
							attackScores[25] += 100;
							attackScores[30] += 100;
							attackScores[14] += 100;
							attackScores[22] += 100;
						}
					} else {
						attackScores[16] += 25;
						attackScores[25] += 25;
						attackScores[30] += 25;
						attackScores[14] += 25;
						attackScores[22] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[30] += 50;
					attackScores[14] += 50;
					attackScores[22] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(-2, -3);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[26] += G.paintPerChips() * 100;
							attackScores[13] += G.paintPerChips() * 100;
							attackScores[31] += G.paintPerChips() * 100;
							attackScores[15] += G.paintPerChips() * 100;
							attackScores[21] += G.paintPerChips() * 100;
						} else {
							attackScores[26] += 100;
							attackScores[13] += 100;
							attackScores[31] += 100;
							attackScores[15] += 100;
							attackScores[21] += 100;
						}
					} else {
						attackScores[26] += 25;
						attackScores[13] += 25;
						attackScores[31] += 25;
						attackScores[15] += 25;
						attackScores[21] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[31] += 50;
					attackScores[15] += 50;
					attackScores[21] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(-2, 3);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[27] += G.paintPerChips() * 100;
							attackScores[14] += G.paintPerChips() * 100;
							attackScores[22] += G.paintPerChips() * 100;
							attackScores[16] += G.paintPerChips() * 100;
							attackScores[32] += G.paintPerChips() * 100;
						} else {
							attackScores[27] += 100;
							attackScores[14] += 100;
							attackScores[22] += 100;
							attackScores[16] += 100;
							attackScores[32] += 100;
						}
					} else {
						attackScores[27] += 25;
						attackScores[14] += 25;
						attackScores[22] += 25;
						attackScores[16] += 25;
						attackScores[32] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[22] += 50;
					attackScores[16] += 50;
					attackScores[32] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(2, -3);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[19] += G.paintPerChips() * 100;
							attackScores[26] += G.paintPerChips() * 100;
							attackScores[23] += G.paintPerChips() * 100;
							attackScores[17] += G.paintPerChips() * 100;
							attackScores[33] += G.paintPerChips() * 100;
						} else {
							attackScores[19] += 100;
							attackScores[26] += 100;
							attackScores[23] += 100;
							attackScores[17] += 100;
							attackScores[33] += 100;
						}
					} else {
						attackScores[19] += 25;
						attackScores[26] += 25;
						attackScores[23] += 25;
						attackScores[17] += 25;
						attackScores[33] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[23] += 50;
					attackScores[17] += 50;
					attackScores[33] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(2, 3);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[27] += G.paintPerChips() * 100;
							attackScores[20] += G.paintPerChips() * 100;
							attackScores[18] += G.paintPerChips() * 100;
							attackScores[24] += G.paintPerChips() * 100;
							attackScores[34] += G.paintPerChips() * 100;
						} else {
							attackScores[27] += 100;
							attackScores[20] += 100;
							attackScores[18] += 100;
							attackScores[24] += 100;
							attackScores[34] += 100;
						}
					} else {
						attackScores[27] += 25;
						attackScores[20] += 25;
						attackScores[18] += 25;
						attackScores[24] += 25;
						attackScores[34] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[18] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[18] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[18] += 50;
					attackScores[24] += 50;
					attackScores[34] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[18] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[18] += 50;
					}
				}
			}
		}
		loc = G.me.translate(3, -2);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[28] += G.paintPerChips() * 100;
							attackScores[17] += G.paintPerChips() * 100;
							attackScores[35] += G.paintPerChips() * 100;
							attackScores[19] += G.paintPerChips() * 100;
							attackScores[23] += G.paintPerChips() * 100;
						} else {
							attackScores[28] += 100;
							attackScores[17] += 100;
							attackScores[35] += 100;
							attackScores[19] += 100;
							attackScores[23] += 100;
						}
					} else {
						attackScores[28] += 25;
						attackScores[17] += 25;
						attackScores[35] += 25;
						attackScores[19] += 25;
						attackScores[23] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[35] += 50;
					attackScores[19] += 50;
					attackScores[23] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(3, 2);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[18] += G.paintPerChips() * 100;
							attackScores[28] += G.paintPerChips() * 100;
							attackScores[20] += G.paintPerChips() * 100;
							attackScores[36] += G.paintPerChips() * 100;
							attackScores[24] += G.paintPerChips() * 100;
						} else {
							attackScores[18] += 100;
							attackScores[28] += 100;
							attackScores[20] += 100;
							attackScores[36] += 100;
							attackScores[24] += 100;
						}
					} else {
						attackScores[18] += 25;
						attackScores[28] += 25;
						attackScores[20] += 25;
						attackScores[36] += 25;
						attackScores[24] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[20] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[20] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[20] += 50;
					attackScores[36] += 50;
					attackScores[24] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[20] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[20] += 50;
					}
				}
			}
		}
		loc = G.me.translate(-4, 0);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[9] += G.paintPerChips() * 100;
							attackScores[29] += G.paintPerChips() * 100;
							attackScores[25] += G.paintPerChips() * 100;
							attackScores[30] += G.paintPerChips() * 100;
						} else {
							attackScores[9] += 100;
							attackScores[29] += 100;
							attackScores[25] += 100;
							attackScores[30] += 100;
						}
					} else {
						attackScores[9] += 25;
						attackScores[29] += 25;
						attackScores[25] += 25;
						attackScores[30] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[29] += 50;
					attackScores[25] += 50;
					attackScores[30] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(0, -4);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[10] += G.paintPerChips() * 100;
							attackScores[33] += G.paintPerChips() * 100;
							attackScores[26] += G.paintPerChips() * 100;
							attackScores[31] += G.paintPerChips() * 100;
						} else {
							attackScores[10] += 100;
							attackScores[33] += 100;
							attackScores[26] += 100;
							attackScores[31] += 100;
						}
					} else {
						attackScores[10] += 25;
						attackScores[33] += 25;
						attackScores[26] += 25;
						attackScores[31] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[33] += 50;
					attackScores[26] += 50;
					attackScores[31] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(0, 4);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[11] += G.paintPerChips() * 100;
							attackScores[32] += G.paintPerChips() * 100;
							attackScores[27] += G.paintPerChips() * 100;
							attackScores[34] += G.paintPerChips() * 100;
						} else {
							attackScores[11] += 100;
							attackScores[32] += 100;
							attackScores[27] += 100;
							attackScores[34] += 100;
						}
					} else {
						attackScores[11] += 25;
						attackScores[32] += 25;
						attackScores[27] += 25;
						attackScores[34] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[32] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[32] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[32] += 50;
					attackScores[27] += 50;
					attackScores[34] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[32] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[32] += 50;
					}
				}
			}
		}
		loc = G.me.translate(4, 0);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[12] += G.paintPerChips() * 100;
							attackScores[35] += G.paintPerChips() * 100;
							attackScores[36] += G.paintPerChips() * 100;
							attackScores[28] += G.paintPerChips() * 100;
						} else {
							attackScores[12] += 100;
							attackScores[35] += 100;
							attackScores[36] += 100;
							attackScores[28] += 100;
						}
					} else {
						attackScores[12] += 25;
						attackScores[35] += 25;
						attackScores[36] += 25;
						attackScores[28] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[35] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[35] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[35] += 50;
					attackScores[36] += 50;
					attackScores[28] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[35] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[35] += 50;
					}
				}
			}
		}
		loc = G.me.translate(-4, -1);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[13] += G.paintPerChips() * 100;
							attackScores[29] += G.paintPerChips() * 100;
							attackScores[25] += G.paintPerChips() * 100;
						} else {
							attackScores[13] += 100;
							attackScores[29] += 100;
							attackScores[25] += 100;
						}
					} else {
						attackScores[13] += 25;
						attackScores[29] += 25;
						attackScores[25] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[29] += 50;
					attackScores[25] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(-4, 1);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[14] += G.paintPerChips() * 100;
							attackScores[25] += G.paintPerChips() * 100;
							attackScores[30] += G.paintPerChips() * 100;
						} else {
							attackScores[14] += 100;
							attackScores[25] += 100;
							attackScores[30] += 100;
						}
					} else {
						attackScores[14] += 25;
						attackScores[25] += 25;
						attackScores[30] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[25] += 50;
					attackScores[30] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(-1, -4);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[15] += G.paintPerChips() * 100;
							attackScores[26] += G.paintPerChips() * 100;
							attackScores[31] += G.paintPerChips() * 100;
						} else {
							attackScores[15] += 100;
							attackScores[26] += 100;
							attackScores[31] += 100;
						}
					} else {
						attackScores[15] += 25;
						attackScores[26] += 25;
						attackScores[31] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[26] += 50;
					attackScores[31] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(-1, 4);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[16] += G.paintPerChips() * 100;
							attackScores[32] += G.paintPerChips() * 100;
							attackScores[27] += G.paintPerChips() * 100;
						} else {
							attackScores[16] += 100;
							attackScores[32] += 100;
							attackScores[27] += 100;
						}
					} else {
						attackScores[16] += 25;
						attackScores[32] += 25;
						attackScores[27] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[32] += 50;
					attackScores[27] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(1, -4);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[17] += G.paintPerChips() * 100;
							attackScores[33] += G.paintPerChips() * 100;
							attackScores[26] += G.paintPerChips() * 100;
						} else {
							attackScores[17] += 100;
							attackScores[33] += 100;
							attackScores[26] += 100;
						}
					} else {
						attackScores[17] += 25;
						attackScores[33] += 25;
						attackScores[26] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[33] += 50;
					attackScores[26] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(1, 4);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[18] += G.paintPerChips() * 100;
							attackScores[27] += G.paintPerChips() * 100;
							attackScores[34] += G.paintPerChips() * 100;
						} else {
							attackScores[18] += 100;
							attackScores[27] += 100;
							attackScores[34] += 100;
						}
					} else {
						attackScores[18] += 25;
						attackScores[27] += 25;
						attackScores[34] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[27] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[27] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[27] += 50;
					attackScores[34] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[27] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[27] += 50;
					}
				}
			}
		}
		loc = G.me.translate(4, -1);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[19] += G.paintPerChips() * 100;
							attackScores[28] += G.paintPerChips() * 100;
							attackScores[35] += G.paintPerChips() * 100;
						} else {
							attackScores[19] += 100;
							attackScores[28] += 100;
							attackScores[35] += 100;
						}
					} else {
						attackScores[19] += 25;
						attackScores[28] += 25;
						attackScores[35] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[28] += 50;
					attackScores[35] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(4, 1);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[20] += G.paintPerChips() * 100;
							attackScores[28] += G.paintPerChips() * 100;
							attackScores[36] += G.paintPerChips() * 100;
						} else {
							attackScores[20] += 100;
							attackScores[28] += 100;
							attackScores[36] += 100;
						}
					} else {
						attackScores[20] += 25;
						attackScores[28] += 25;
						attackScores[36] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[28] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[28] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[28] += 50;
					attackScores[36] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[28] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[28] += 50;
					}
				}
			}
		}
		loc = G.me.translate(-3, -3);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[31] += G.paintPerChips() * 100;
							attackScores[29] += G.paintPerChips() * 100;
							attackScores[21] += G.paintPerChips() * 100;
						} else {
							attackScores[31] += 100;
							attackScores[29] += 100;
							attackScores[21] += 100;
						}
					} else {
						attackScores[31] += 25;
						attackScores[29] += 25;
						attackScores[21] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[21] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(-3, 3);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[32] += G.paintPerChips() * 100;
							attackScores[30] += G.paintPerChips() * 100;
							attackScores[22] += G.paintPerChips() * 100;
						} else {
							attackScores[32] += 100;
							attackScores[30] += 100;
							attackScores[22] += 100;
						}
					} else {
						attackScores[32] += 25;
						attackScores[30] += 25;
						attackScores[22] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[22] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(3, -3);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[35] += G.paintPerChips() * 100;
							attackScores[33] += G.paintPerChips() * 100;
							attackScores[23] += G.paintPerChips() * 100;
						} else {
							attackScores[35] += 100;
							attackScores[33] += 100;
							attackScores[23] += 100;
						}
					} else {
						attackScores[35] += 25;
						attackScores[33] += 25;
						attackScores[23] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[23] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(3, 3);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[34] += G.paintPerChips() * 100;
							attackScores[36] += G.paintPerChips() * 100;
							attackScores[24] += G.paintPerChips() * 100;
						} else {
							attackScores[34] += 100;
							attackScores[36] += 100;
							attackScores[24] += 100;
						}
					} else {
						attackScores[34] += 25;
						attackScores[36] += 25;
						attackScores[24] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[24] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[24] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[24] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[24] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[24] += 50;
					}
				}
			}
		}
		loc = G.me.translate(-4, -2);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[21] += G.paintPerChips() * 100;
							attackScores[29] += G.paintPerChips() * 100;
						} else {
							attackScores[21] += 100;
							attackScores[29] += 100;
						}
					} else {
						attackScores[21] += 25;
						attackScores[29] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[29] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(-4, 2);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[22] += G.paintPerChips() * 100;
							attackScores[30] += G.paintPerChips() * 100;
						} else {
							attackScores[22] += 100;
							attackScores[30] += 100;
						}
					} else {
						attackScores[22] += 25;
						attackScores[30] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[30] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(-2, -4);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[21] += G.paintPerChips() * 100;
							attackScores[31] += G.paintPerChips() * 100;
						} else {
							attackScores[21] += 100;
							attackScores[31] += 100;
						}
					} else {
						attackScores[21] += 25;
						attackScores[31] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[31] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(-2, 4);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[22] += G.paintPerChips() * 100;
							attackScores[32] += G.paintPerChips() * 100;
						} else {
							attackScores[22] += 100;
							attackScores[32] += 100;
						}
					} else {
						attackScores[22] += 25;
						attackScores[32] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[32] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(2, -4);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[23] += G.paintPerChips() * 100;
							attackScores[33] += G.paintPerChips() * 100;
						} else {
							attackScores[23] += 100;
							attackScores[33] += 100;
						}
					} else {
						attackScores[23] += 25;
						attackScores[33] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[33] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(2, 4);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[24] += G.paintPerChips() * 100;
							attackScores[34] += G.paintPerChips() * 100;
						} else {
							attackScores[24] += 100;
							attackScores[34] += 100;
						}
					} else {
						attackScores[24] += 25;
						attackScores[34] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[34] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[34] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[34] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[34] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[34] += 50;
					}
				}
			}
		}
		loc = G.me.translate(4, -2);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[23] += G.paintPerChips() * 100;
							attackScores[35] += G.paintPerChips() * 100;
						} else {
							attackScores[23] += 100;
							attackScores[35] += 100;
						}
					} else {
						attackScores[23] += 25;
						attackScores[35] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[35] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
					}
				}
			}
		}
		loc = G.me.translate(4, 2);
		if (G.rc.onTheMap(loc)) {
			MapInfo info = G.rc.senseMapInfo(loc);
			if (!info.isWall()) {
				if (info.getPaint() == PaintType.EMPTY) {
					if (info.hasRuin()) {
						if (G.rc.canSenseRobotAtLocation(loc) && G.rc.senseRobotAtLocation(loc).team == G.opponentTeam) {
							attackScores[24] += G.paintPerChips() * 100;
							attackScores[36] += G.paintPerChips() * 100;
						} else {
							attackScores[24] += 100;
							attackScores[36] += 100;
						}
					} else {
						attackScores[24] += 25;
						attackScores[36] += 25;
					}
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[36] += 25;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[36] += 25;
					}
				} else if (info.getPaint().isEnemy()) {
					attackScores[36] += 50;
					if (G.opponentRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[36] += 50;
					} else if (G.allyRobotsString.indexOf(loc.toString()) != -1) {
						attackScores[36] += 50;
					}
				}
			}
		}

